services:
  postgres:
    container_name: ${DOCKER_IMAGE_POSTGRES}
    image: postgres:latest
    env_file:
      - .env
    # environment:
    #   POSTGRES_USER: ${POSTGRES_USER}
    #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #   POSTGRES_DB: ${POSTGRES_DB}    
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - my_net

  pgadmin:
    container_name: ${DOCKER_IMAGE_PGADMIN}
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    # environment:
    #   PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
    #   PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    #   PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT_INTERNAL}    
    ports:
      - "${PGADMIN_LISTEN_PORT_EXTERNAL}:${PGADMIN_LISTEN_PORT_INTERNAL}"
    depends_on:
      - postgres
    networks:
      - my_net

  backend:
    container_name: winebar-2_backend
    build:
      context:
        ./backend
    expose:
      - "5000"
    env_file:
      - .env
    environment:
      USE_BACKEND_PREFIX: false
    command: uvicorn sql_app.main:app --host 0.0.0.0 --port 5000 --root-path /backend --forwarded-allow-ips * --proxy-headers
    restart: on-failure
    networks:
      - my_net    

  frontend:
    container_name: winebar-2_frontend
    build: 
      context:
        ./frontend
    expose:
      - "3000"
    command: npm start
    networks:
      - my_net
    env_file:
      - .env
      - ./frontend/.docker.env

  nginx:
    container_name: winebar-2_nginx
    image: nginx:stable
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:8081"
    depends_on:
      -  backend
      -  frontend
    networks:
      - my_net
    restart: on-failure

networks:
  my_net: 
    driver: bridge

